apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: {{ include "sapl.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "sapl.name" . }}
    helm.sh/chart: {{ include "sapl.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "sapl.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "sapl.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      dnsConfig:
        options:
        - name: ndots
          value: "1"
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          env:
            - name: DATABASE_URL
              value: {{ printf "postgresql://%s:%s@%s:5432/%s" .Values.postgresql.postgresqlUsername .Values.postgresql.postgresqlPassword (include "postgresql.fullname" .) .Values.postgresql.postgresqlDatabase| quote }}
            - name: ADMIN_PASSWORD
              value: "{{ .Values.sapl.adminPassword }}"
            - name: ADMIN_EMAIL
              value: "{{ .Values.sapl.adminEmail }}"
            - name: EMAIL_SEND_USER
              value: "{{ .Values.sapl.emailSendUser }}"
            - name: DEBUG
              value: "{{ .Values.sapl.debug }}"
            - name: USE_TLS
              value: "{{ .Values.sapl.useTls }}"
            - name: EMAIL_PORT
              value: "{{ .Values.sapl.emailPort }}"
            - name: EMAIL_HOST
              value: "{{ .Values.sapl.emailHost }}"
            - name: TZ
              value: "{{ .Values.sapl.timeZone }}"
            - name: USE_SOLR
              value: "{{ .Values.sapl.useSolr }}"
            - name: SOLR_COLLECTION
              value: "{{ .Values.sapl.solrCollection }}"
            - name: SOLR_URL
              value: "{{ .Values.sapl.solrUrl }}"
            - name: NUM_SHARDS
              value: "{{ .Values.sapl.solrNumShards }}"
            - name: RF
              value: "{{ .Values.sapl.solrReplFactor }}"
            - name: MAX_SHARDS_PER_NODE
              value: "{{ .Values.sapl.solrMaxShardsPerNode }}"
          volumeMounts:
            - mountPath: /var/interlegis/sapl/data
              name: {{ .Release.Name }}-data
            - mountPath: /var/interlegis/sapl/media
              name: {{ .Release.Name }}-media
          livenessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 60
            failureThreshold: 3
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 60
            failureThreshold: 3
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 2
          resources:
{{ toYaml .Values.resources | indent 12 }}
      volumes:
      - name: {{ .Release.Name }}-data
      {{- if .Values.persistence.enabled }}
        persistentVolumeClaim:
          claimName: {{ .Release.Name }}-data
      {{- else }}
        emptyDir: {}
      {{- end }}
      - name: {{ .Release.Name }}-media
      {{- if .Values.persistence.enabled }}
        persistentVolumeClaim:
          claimName: {{ .Release.Name }}-media
      {{- else }}
        emptyDir: {}
      {{- end }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
