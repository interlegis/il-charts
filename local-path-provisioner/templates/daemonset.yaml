apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ .Values.daemonset.name }}
  namespace: {{ .Values.common.namespace }}
  labels:
    app: local-path-provisioner
    heritage: {{ .Release.Service | quote }}
    release: {{ .Release.Name | quote }}
    chart: {{ replace "+" "_" .Chart.Version | printf "%s-%s" .Chart.Name }}
spec:
  selector:
    matchLabels:
      app: local-path-provisioner
  template:
    metadata:
      labels:
        app: local-path-provisioner
    spec:
      serviceAccountName: {{.Values.daemonset.serviceAccount}}
{{- if .Values.daemonset.nodeSelector }}
      nodeSelector:
{{ .Values.daemonset.nodeSelector | toYaml | trim | indent 8 }}
{{- end }}
{{- if .Values.daemonset.tolerations }}
      tolerations:
{{ .Values.daemonset.tolerations | toYaml | trim | indent 8 }}
{{- end }}
      containers:
      - name: local-path-provisioner
        image: "{{ .Values.daemonset.image }}"
        {{- if .Values.daemonset.imagePullPolicy }}
        imagePullPolicy: {{ .Values.daemonset.imagePullPolicy | quote }}
        {{- end }}
{{- if .Values.daemonset.resources }}
        resources:
{{ .Values.daemonset.resources | toYaml | trim | indent 12 }}
{{- end }}
        command:
        - local-path-provisioner
        - --debug
        - start
        - --config
        - /etc/config/config.json
        volumeMounts:
        - name: config-volume
          mountPath: /etc/config/
        env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
      volumes:
        - name: config-volume
          configMap:
            name: {{ .Values.common.configMapName }}
