{{- if .Values.provisioning.kubernetes -}}
---
kind: Service
apiVersion: v1
metadata:
  name: {{ include "oscm.fullname" . }}-kafka
  labels:
    app.kubernetes.io/name: {{ include "oscm.name" . }}-kafka
    helm.sh/chart: {{ include "oscm.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  selector:
    name: {{ include "oscm.fullname" . }}-kafka
  ports:
  - port: 9092
    protocol: TCP
    name: tcp-kafka
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ include "oscm.fullname" . }}-kafka
  labels:
    app.kubernetes.io/name: {{ include "oscm.name" . }}-kafka
    helm.sh/chart: {{ include "oscm.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: {{ .Values.kafka.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "oscm.name" . }}-kafka
      app.kubernetes.io/instance: {{ .Release.Name }}
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "oscm.name" . }}-kafka
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      containers:
      - name: {{ include "oscm.fullname" . }}-kafka
        image: "{{ .Values.kafka.repository }}:{{ .Values.kafka.tag }}"
        imagePullPolicy: {{ .Values.kafka.pullPolicy }}
        env:
        - name: ZOOKEEPER_CONNECTION_STRING
          value: "zookeeper:2181"
        - name: KAFKA_ADVERTISED_HOST_NAME
          value: {{ include "oscm.fullname" . }}-kafka
        - name: KAFKA_CREATE_TOPICS
          value: "core-subscription:1:1,provisioning-release:1:1"
        - name: KAFKA_TOPIC_CONFIG
          value: cleanup.policy=compact
        ports:
        - containerPort: 9092
        volumeMounts:
        - name: kafka-data
          mountPath: /data
      volumes:
      - name: kafka-data
        persistentVolumeClaim:
          claimName: kafka-data
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}

---
{{- if .Values.kafka.persistence.enabled }}
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: kafka-data
spec:
  accessModes:
  - {{ .Values.kafka.persistence.accessMode }}
  resources:
    requests:
      storage: {{ .Values.kafka.persistence.size }}
  {{- if .Values.kafka.persistence.storageClass }}
    {{- if (eq "-" .Values.kafka.persistence.storageClass) }}
  storageClassName: ""
    {{- else }}
  storageClassName: "{{ .Values.kafka.persistence.storageClass }}"
    {{- end }}
  {{- end }}
{{- end }}

{{- end }}
